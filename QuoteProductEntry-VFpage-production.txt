<apex:page standardController="Quote" extensions="QuoteProductEntryExtension" action="{!priceBookCheck}" >

    <apex:sectionHeader Title="Manage {!$ObjectType.Product2.LabelPlural}" subtitle="{!Quote.Name}"/>
    <apex:messages style="color:red"/>

    <style>
        .search{
            font-size:14pt;
            margin-right: 20px;    
        }
        .fyi{
            color:red;
            font-style:italic;
        }
        .label{
            margin-right:10px;
            font-weight:bold;
        }
        
        .custPopup{
        background-color: white;
        border-width: 2px;
        border-style: solid;
        z-index: 9999;
        left: 50%;
        padding:10px;
        position: absolute;
        /* These are the 3 css properties you will need to change so the popup 
        displays in the center of the screen. First set the width. Then set 
        margin-left to negative half of what the width is. You can add 
        the height property for a fixed size pop up if you want.*/
        width: 500px;
        margin-left: -250px;
        top:100px;
        }
        .popupBackground{
        background-color:black;
        opacity: 0.20;
        filter: alpha(opacity = 20);
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 9998;
        }               
    </style>
    
    <script type='text/javascript'>
    
        // This script assists the search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:
        
        var waitTime = 1;
        var countDown = waitTime+1;
        var started = false;        
        function resetTimer(){        
            countDown=waitTime+1;            
            if(started==false){
                started=true;
                runCountDown();
            }
        }
        
        function runCountDown(){        
            countDown--;            
            if(countDown<=0){
                fetchResults();
                started=false;
            }
            else{
                window.setTimeout(runCountDown,1000);
            }
        }
        
        // Added by Mohit Sharma
        function valueValidation(thisId, discount)
        {
            if(discount != null && discount != '' && discount < document.getElementById(thisId).value)
            {
                alert('You can not enter more than ' + discount + ' discount.');
                //document.getElementById(thisId).value = parseInt(document.getElementById(thisId).value /10);
                alert(document.getElementById(thisId).value);
                return false;
            }
            alert(document.getElementById(thisId).value + ' -- Discount: ' + discount);
        }
    </script>  
    <apex:form >    
                <!-- Add By Nitish Bhardwaj ------------>>>
        <apex:outputPanel id="tstpopup">
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
                <apex:messages style="color:red"  />
              
                <!-- <apex:commandButton value="Continue" action="{!onSave}" rerender="tstpopup"/>-->
                <div align="center" draggable="false" >
                    <apex:commandButton value="OK" action="{!closepopup}" rerender="tstpopup" />
                </div>
            </apex:outputPanel>
        </apex:outputPanel>
        <!-- Add By Nitish Bhardwaj ------------>
        
        <apex:outputPanel id="mainBody">        
            <!--<apex:outputLabel styleClass="label">PriceBook: </apex:outputLabel>
            <apex:outputText value="{!theBook.Name}"/>&nbsp;
            <apex:commandLink action="{!changePricebook}" value="change" immediate="true"/>
            <br/>
            <apex:outputPanel rendered="{!multipleCurrencies}">
                <apex:outputLabel styleClass="label">Currency: </apex:outputLabel>
                <apex:outputText value="{!chosenCurrency}"/>
                <br/>
            </apex:outputPanel>-->
            <br/>            
<!-- this is the upper table... a.k.a. the "Shopping Cart"-->
            <!-- notice we use a lot of $ObjectType merge fields... I did that because if you have changed the labels of fields or objects it will reflect your own lingo -->
            <apex:pageBlock title="Selected {!$ObjectType.Product2.LabelPlural}" id="selected">
                <apex:pageMessages id="idError"></apex:pageMessages>
                
                <apex:variable value="{!0}" var="i"/>
                <apex:pageblockTable value="{!lstWrap}" var="objWrapLineItem" >
                
                    <apex:column >
                    <apex:variable value="{!i+1}" var="i"/>
                       <apex:commandLink value="Remove" action="{!removeFromShoppingCart}" reRender="selected,searchResults" immediate="true" status="loading">
                            <!-- this param is how we send an argument to the controller, so it knows which row we clicked 'remove' on -->
                            <!-- commented by Gaurav Vishwakarma and adding new line for delete single lineitem on duplicate lineitems-->
                            <!--<apex:param value="{!objWrapLineItem.objQuoteLineItem.PriceBookEntryId}" assignTo="{!toUnselect}" name="toUnselect"/>-->
                            <apex:param value="{!objWrapLineItem.objQuoteLineItem.Id}" assignTo="{!toUnselect}" name="toUnselect"/>
                            <apex:param value="{!i}" assignTo="{!RemoveCount}" name="RemoveCount"/>
                                <apex:actionStatus id="loading">
                                                    <apex:facet name="start" >
                                                        <apex:image url="{!$Resource.loadingIcon}" style="width:15px;height:15px;" />
                                                    </apex:facet>
                                </apex:actionstatus>
                        </apex:commandLink>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.Product2.Fields.Family.Label}" value="{!objWrapLineItem.objQuoteLineItem.PriceBookEntry.Product2.Family}"/>
                    
                    <apex:column headerValue="{!$ObjectType.Product2.LabelPlural}" value="{!objWrapLineItem.objQuoteLineItem.PriceBookEntry.Product2.Name}"/>
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Service_Months__c.Label}">
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Service_Months__c}" style="width:70px" required="true" onkeyup="refreshTotals();" rendered="{!IF(((objWrapLineItem.objQuoteLineItem.PriceBookEntry.Product2.Family == "Service") || (objWrapLineItem.objQuoteLineItem.PriceBookEntry.Product2.Family=="Software Subscription") || (objWrapLineItem.objQuoteLineItem.PriceBookEntry.Product2.Family=="CloudVision")),"true","false")}"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Quantity__c.Label}">
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Quantity__c}" style="width:70px" required="true" onkeyup="refreshTotals();"/>
                    </apex:column>
                       
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.UnitPrice.Label}">
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.UnitPrice}" style="width:70px" required="true" onkeyup="refreshTotals();"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Discount.Label}">
                        <!--<apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Discount}" style="width:70px" onkeypress="return valueValidation(this.id, '{!objWrapLineItem.decDiscount}');"/>-->
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Discount}" style="width:70px"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Description.Label}">
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Description}" required="false"/>
                    </apex:column>
                    
                    <!-- Adding Group__c field by Gaurav Vishwakarma -->
                    
                    <!--<apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Group__c.Label}">-->
                    <apex:column headerValue="Group">
                        <apex:inputField value="{!objWrapLineItem.objQuoteLineItem.Group__c}" required="false"/>
                    </apex:column>
                    
                    <apex:column headerValue="" rendered="{!IF(objWrapLineItem.strError != null && objWrapLineItem.strError != '', true, false)}">
                        <apex:outputText value="{!objWrapLineItem.strError}" style="color: red;"/>
                    </apex:column>
                </apex:pageblockTable>  
                
                <apex:pageBlockButtons >
                    <apex:commandButton action="{!onSave}" value="Save"  rendered="{!IF(displayPopUp != False,True,False)}" />
                    <apex:commandButton action="{!onSave}" value="Save"  reRender="tstpopup" rendered="{!IF(displayPopUp == False,True,False)}" />
                    <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true"/>
                </apex:pageBlockButtons>            
            </apex:pageBlock>    
<!-- this is the lower table: search bar and search results -->    
            <apex:pageBlock >            
                <apex:outputPanel styleClass="search">
                    Search for {!$ObjectType.Product2.LabelPlural}:
                </apex:outputPanel>
                <apex:actionRegion renderRegionOnly="false" immediate="true">                
                    <apex:actionFunction name="fetchResults" action="{!updateAvailableList}" reRender="searchResults" status="searchStatus"/>                    
                    <!-- here we invoke the scripting to get out fancy 'no button' search bar to work -->
                    <apex:inputText value="{!searchString}" onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" style="width:300px"/>
                    &nbsp;&nbsp;
                    <i>
                        <!-- actionStatus component makes it easy to let the user know when a search is underway -->
                        <apex:actionStatus id="searchStatus" startText="searching..." stopText=" "/>
                    </i>                    
                </apex:actionRegion>            
                <br/>
                <apex:pageBlockSection >
                    <apex:pageBlockSectionItem >
                        <apex:actionRegion renderRegionOnly="false" immediate="true">
                            <apex:outputLabel value="{!$ObjectType.Product2.Fields.Family.Label}"/>
                            <apex:selectList value="{!productFamily}" multiselect="false" size="1" title="aaaa {!$ObjectType.Product2.Fields.Family.Label}">
                                <apex:selectOptions value="{!ProductFamilyItems}"/>
                                <apex:actionSupport event="onchange" action="{!updateAvailableList}" rerender="searchResults" status="searchStatus"/>
                            </apex:selectList>
                        </apex:actionRegion>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:actionRegion renderRegionOnly="false" immediate="true">
                            <apex:outputLabel value="Series Name"/>
                            <apex:selectList value="{!ProductSubFamily}" multiselect="false" size="1" title="ASAS">
                                <apex:selectOptions value="{!SubFamilyItems}"/>
                                <apex:actionSupport event="onchange" action="{!updateAvailableList}" rerender="searchResults" status="searchStatus"/>
                            </apex:selectList> 
                        </apex:actionRegion>
                    </apex:pageBlockSectionItem>                   
                </apex:pageBlockSection>
                <br/> 
                <br/>            
                <apex:outputPanel id="searchResults">                
                    <apex:pageBlockTable value="{!AvailableProducts}" var="a" id="SelectData">
                        <apex:column style="width:7%" >
                            <apex:facet name="header">
                                <apex:commandLink action="{!sort}" value="{!$ObjectType.Product2.Fields.Family.Label} {!IF(wikiUTIL_Sorter.column=='Product2.Family',IF(wikiUTIL_Sorter.sortDirection='ASC','↑','↓'),'')}" reRender="SelectData">
                                    <apex:param value="Product2.Family" name="column" assignTo="{!wikiUTIL_Sorter.column}" ></apex:param>
                                </apex:commandLink>
                            </apex:facet> 
                            <apex:outputText value="{!a.Product2.Family}" />                  
                        </apex:column>
                        <apex:column style="width:43%" >
                            <apex:facet name="header">
                                <apex:commandLink action="{!sort}" value="{!$ObjectType.Product2.Fields.Name.Label} {!IF(wikiUTIL_Sorter.column=='Product2.Name',IF(wikiUTIL_Sorter.sortDirection='ASC','↑','↓'),'')}" reRender="SelectData">
                                    <apex:param value="Product2.Name" name="column" assignTo="{!wikiUTIL_Sorter.column}" ></apex:param>
                                </apex:commandLink>
                            </apex:facet> 
                            <apex:outputText value="{!a.Product2.Name}" />                  
                        </apex:column>                        
                        <apex:column style="width:43%" >
                            <apex:facet name="header">
                                <apex:commandLink action="{!sort}" value="{!$ObjectType.Product2.Fields.Description.Label} {!IF(wikiUTIL_Sorter.column=='Product2.Description',IF(wikiUTIL_Sorter.sortDirection='ASC','↓','↑'),'')}" reRender="SelectData">
                                    <apex:param value="Product2.Description" name="column" assignTo="{!wikiUTIL_Sorter.column}" ></apex:param>
                                </apex:commandLink>
                            </apex:facet> 
                            <apex:outputText value="{!a.Product2.Description}" />                  
                        </apex:column>
                        <apex:column style="width:7%">
                            <!-- command button in a column... neato -->
                            <apex:actionStatus id="loading">
                                    <apex:facet name="start" >
                                        <apex:image url="{!$Resource.loadingIcon}" style="width:15px;height:15px;" />
                                    </apex:facet>
                                </apex:actionstatus>  
                            <apex:commandButton value="Select" action="{!addToShoppingCart}" reRender="selected,searchResults" immediate="true" status="loading">
                                <!-- again we use apex:param to be able to tell the controller which row we are working with -->
                                <apex:param value="{!a.Id}" assignTo="{!toSelect}" name="toSelect"/>
                                <!--Akshay: to capture product family when product is selected -->
                                <apex:param value="{!a.Product2.Family}" assignTo="{!selProdFamily}" name="selProdFamily"/>
                                    
                            </apex:commandButton>
                            </apex:column>   
                                       
                    </apex:pageBlockTable>   
                                      
                    <!-- We put up a warning if results exceed 100 rows -->
                    <apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
                        <br/>
                        Your search returned over 100 results, use a more specific search string if you do not see the desired {!$ObjectType.Product2.Label}.
                        <br/>
                    </apex:outputPanel>                    
                </apex:outputPanel>            
            </apex:pageBlock>            
        </apex:outputPanel>
    </apex:form>
</apex:page>